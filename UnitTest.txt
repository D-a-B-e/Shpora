package com.example.pr13

import android.content.Context
import androidx.room.Database
import androidx.room.Room
import androidx.test.core.app.ApplicationProvider
import androidx.test.espresso.Espresso
import androidx.test.espresso.ViewAction
import androidx.test.espresso.action.ViewActions
import androidx.test.espresso.action.ViewActions.typeText
import androidx.test.espresso.matcher.ViewMatchers.withId
import org.junit.After
import org.junit.Test

import org.junit.Assert.*
import org.junit.Before
import java.io.IOException

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * See [testing documentation](http://d.android.com/tools/testing).
 */
class ExampleUnitTest{
    private lateinit var database: NewtonDatabase

    @Before
    @Throws(IOException::class)
    fun setUp(){
        val context = ApplicationProvider.getApplicationContext<Context>()
        database = Room.inMemoryDatabaseBuilder(context, NewtonDatabase::class.java)
            .allowMainThreadQueries()
            .build()
    }

    @After
    @Throws(IOException::class)
    fun tearDown(){
        database.close()
    }

    @Test
    @Throws(IOException::class)
    fun testInsertData(){
        database.newtonDao().clear()
        database.newtonDao().add(
            NewtonDB(
                expression = "x*(x 2)",
                operation = "derive",
                result = "4 x",
            )
        )
        val newton = database.newtonDao().getAll()
        //newton.size, 1
        assertEquals(newton != null, true)
        if (newton != null){
            assertEquals(newton.expression, "x*(x 2)")
            assertEquals(newton.operation, "derive")
            assertEquals(newton.result, "4 x")
        }
    }

    @Test
    fun testOutPutData(){
        database.newtonDao().clear()
        database.newtonDao().add(
            NewtonDB(
                expression = "x*(x 2)",
                operation = "derive",
                result = "4 x",
            )
        )
        database.newtonDao().clear()
        var newton = database.newtonDao().getAll()
        assertEquals(newton == null, true)
    }
}